const project = require('@lerna/project');
const emojiTypes = require('@hzdg/gitmoji');

module.exports = async () => {
  const scopes = await project.getPackages(process.cwd());
  return `type (scope) subject

# NOTE: It is recommended to author commits using \`yarn commit\`
# or \`git-cz\`, rather than \`git commit\`.
#
# For more on commitizen, see: http://commitizen.github.io/cz-cli/
#
# To author the message in this file, read on.
#
# This monorepo uses some commit conventions to help automate
# versioning and change logging as much as possible.
#
# These conventions are inspired by:
#   https://github.com/conventional-changelog/conventional-changelog
#   https://github.com/ngryman/cz-emoji
#
# The conventions are implemented and enforced by:
#   http://commitizen.github.io/cz-cli/
#   https://github.com/marionebl/commitlint
#
# As such, a commit message should take the form:
#
#   <type> [(scope)] <subject>
#
#   [body]
#
# Where <angle segments> are required,
# and [bracket segments] are optional.
# See lists of valid values for <type> and [(scope)] below.
#
# Some examples:
#
#   üö® squash linting errors
#
#   ‚ûï (@hzdg/scroll-monitor) add react-dom@^16.3.1
#
#   üêõ (@hzdg/scroll-monitor) fix wheel delta and velocity
#
# Valid values for <type> are:
${emojiTypes.map(({emoji, description}) => `#   ${emoji} - ${description}`).join('\n')}
#
#
# Valid values for [(scope)] are:
${scopes.map(({name}) => `#   (${name})`).join('\n')}`;
}
